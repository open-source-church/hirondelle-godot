extends TBaseType
class_name TChannelUnbanRequestCreateEvent

## Autogenerated. Do not modify.

## The ID of the unban request.
var id: String

## The broadcaster’s user ID for the channel the unban request was created for.
var broadcaster_user_id: String

## The broadcaster’s login name.
var broadcaster_user_login: String

## The broadcaster’s display name.
var broadcaster_user_name: String

## User ID of user that is requesting to be unbanned.
var user_id: String

## The user’s login name.
var user_login: String

## The user’s display name.
var user_name: String

## Message sent in the unban request.
var text: String

## The UTC timestamp (in RFC3339 format) of when the unban request was created.
var created_at: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, broadcaster_user_id: String, broadcaster_user_login: String, broadcaster_user_name: String, user_id: String, user_login: String, user_name: String, text: String, created_at: String) -> TChannelUnbanRequestCreateEvent:
	var _new = TChannelUnbanRequestCreateEvent.new()
	_new.id = id
	_new.broadcaster_user_id = broadcaster_user_id
	_new.broadcaster_user_login = broadcaster_user_login
	_new.broadcaster_user_name = broadcaster_user_name
	_new.user_id = user_id
	_new.user_login = user_login
	_new.user_name = user_name
	_new.text = text
	_new.created_at = created_at
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TChannelUnbanRequestCreateEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TChannelUnbanRequestCreateEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TChannelUnbanRequestCreateEvent.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.broadcaster_user_id = obj.get("broadcaster_user_id") if obj.get("broadcaster_user_id") else ""
	_new.broadcaster_user_login = obj.get("broadcaster_user_login") if obj.get("broadcaster_user_login") else ""
	_new.broadcaster_user_name = obj.get("broadcaster_user_name") if obj.get("broadcaster_user_name") else ""
	_new.user_id = obj.get("user_id") if obj.get("user_id") else ""
	_new.user_login = obj.get("user_login") if obj.get("user_login") else ""
	_new.user_name = obj.get("user_name") if obj.get("user_name") else ""
	_new.text = obj.get("text") if obj.get("text") else ""
	_new.created_at = obj.get("created_at") if obj.get("created_at") else ""

	return _new
