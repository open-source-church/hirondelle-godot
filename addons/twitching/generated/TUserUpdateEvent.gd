extends TBaseType
class_name TUserUpdateEvent

## Autogenerated. Do not modify.

## The user’s user id.
var user_id: String

## The user’s user login.
var user_login: String

## The user’s user display name.
var user_name: String

## The user’s email address. The event includes the user’s email address only if the app used to request this event type includes the  user:read:email  scope for the user; otherwise, the field is set to an empty string. See  Create EventSub Subscription .
var email: String

## A Boolean value that determines whether Twitch has verified the user’s email address. Is  true  if Twitch has verified the email address; otherwise, false. NOTE: Ignore this field if the  email  field contains an empty string.
var email_verified: bool

## The user’s description.
var description: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(user_id: String, user_login: String, user_name: String, email: String, email_verified: bool, description: String) -> TUserUpdateEvent:
	var _new = TUserUpdateEvent.new()
	_new.user_id = user_id
	_new.user_login = user_login
	_new.user_name = user_name
	_new.email = email
	_new.email_verified = email_verified
	_new.description = description
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TUserUpdateEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TUserUpdateEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TUserUpdateEvent.new()

	_new.user_id = obj.get("user_id") if obj.get("user_id") else ""
	_new.user_login = obj.get("user_login") if obj.get("user_login") else ""
	_new.user_name = obj.get("user_name") if obj.get("user_name") else ""
	_new.email = obj.get("email") if obj.get("email") else ""
	_new.email_verified = obj.get("email_verified") if obj.get("email_verified") else null
	_new.description = obj.get("description") if obj.get("description") else ""

	return _new
