extends TBaseType
class_name TChannelCheerEvent

## Autogenerated. Do not modify.

## Whether the user cheered anonymously or not.
var is_anonymous: bool

## The user ID for the user who cheered on the specified channel. This is null if  is_anonymous  is true.
var user_id: String

## The user login for the user who cheered on the specified channel. This is null if  is_anonymous  is true.
var user_login: String

## The user display name for the user who cheered on the specified channel. This is null if  is_anonymous  is true.
var user_name: String

## The requested broadcaster ID.
var broadcaster_user_id: String

## The requested broadcaster login.
var broadcaster_user_login: String

## The requested broadcaster display name.
var broadcaster_user_name: String

## The message sent with the cheer.
var message: String

## The number of bits cheered.
var bits: int

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(is_anonymous: bool, user_id: String, user_login: String, user_name: String, broadcaster_user_id: String, broadcaster_user_login: String, broadcaster_user_name: String, message: String, bits: int) -> TChannelCheerEvent:
	var _new = TChannelCheerEvent.new()
	_new.is_anonymous = is_anonymous
	_new.user_id = user_id
	_new.user_login = user_login
	_new.user_name = user_name
	_new.broadcaster_user_id = broadcaster_user_id
	_new.broadcaster_user_login = broadcaster_user_login
	_new.broadcaster_user_name = broadcaster_user_name
	_new.message = message
	_new.bits = bits
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TChannelCheerEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TChannelCheerEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TChannelCheerEvent.new()

	_new.is_anonymous = obj.get("is_anonymous") if obj.get("is_anonymous") else null
	_new.user_id = obj.get("user_id") if obj.get("user_id") else ""
	_new.user_login = obj.get("user_login") if obj.get("user_login") else ""
	_new.user_name = obj.get("user_name") if obj.get("user_name") else ""
	_new.broadcaster_user_id = obj.get("broadcaster_user_id") if obj.get("broadcaster_user_id") else ""
	_new.broadcaster_user_login = obj.get("broadcaster_user_login") if obj.get("broadcaster_user_login") else ""
	_new.broadcaster_user_name = obj.get("broadcaster_user_name") if obj.get("broadcaster_user_name") else ""
	_new.message = obj.get("message") if obj.get("message") else ""
	_new.bits = obj.get("bits") if obj.get("bits") else 0

	return _new
