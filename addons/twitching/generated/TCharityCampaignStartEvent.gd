extends TBaseType
class_name TCharityCampaignStartEvent

## Autogenerated. Do not modify.

## An ID that identifies the charity campaign.
var id: String

## An ID that identifies the broadcaster that’s running the campaign.
var broadcaster_id: String

## The broadcaster’s login name.
var broadcaster_login: String

## The broadcaster’s display name.
var broadcaster_name: String

## The charity’s name.
var charity_name: String

## A description of the charity.
var charity_description: String

## A URL to an image of the charity’s logo. The image’s type is PNG and its size is 100px X 100px.
var charity_logo: String

## A URL to the charity’s website.
var charity_website: String

## An object that contains the current amount of donations that the campaign has received.
var current_amount: TCharityCampaignStartEventCurrentAmount

## An object that contains the campaign’s target fundraising goal.
var target_amount: TCharityCampaignStartEventTargetAmount

## The UTC timestamp (in RFC3339 format) of when the broadcaster started the campaign.
var started_at: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, broadcaster_id: String, broadcaster_login: String, broadcaster_name: String, charity_name: String, charity_description: String, charity_logo: String, charity_website: String, current_amount: TCharityCampaignStartEventCurrentAmount, target_amount: TCharityCampaignStartEventTargetAmount, started_at: String) -> TCharityCampaignStartEvent:
	var _new = TCharityCampaignStartEvent.new()
	_new.id = id
	_new.broadcaster_id = broadcaster_id
	_new.broadcaster_login = broadcaster_login
	_new.broadcaster_name = broadcaster_name
	_new.charity_name = charity_name
	_new.charity_description = charity_description
	_new.charity_logo = charity_logo
	_new.charity_website = charity_website
	_new.current_amount = current_amount
	_new.target_amount = target_amount
	_new.started_at = started_at
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TCharityCampaignStartEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TCharityCampaignStartEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TCharityCampaignStartEvent.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.broadcaster_id = obj.get("broadcaster_id") if obj.get("broadcaster_id") else ""
	_new.broadcaster_login = obj.get("broadcaster_login") if obj.get("broadcaster_login") else ""
	_new.broadcaster_name = obj.get("broadcaster_name") if obj.get("broadcaster_name") else ""
	_new.charity_name = obj.get("charity_name") if obj.get("charity_name") else ""
	_new.charity_description = obj.get("charity_description") if obj.get("charity_description") else ""
	_new.charity_logo = obj.get("charity_logo") if obj.get("charity_logo") else ""
	_new.charity_website = obj.get("charity_website") if obj.get("charity_website") else ""
	_new.current_amount = TCharityCampaignStartEventCurrentAmount.from_object(obj.get("current_amount", {}))
	_new.target_amount = TCharityCampaignStartEventTargetAmount.from_object(obj.get("target_amount", {}))
	_new.started_at = obj.get("started_at") if obj.get("started_at") else ""

	return _new
