extends TBaseType
class_name TTransport

## Autogenerated. Do not modify.

## The transport method. Possible values are:  webhook websocket
var method: String

## The callback URL where the notifications are sent. The URL must use the HTTPS protocol and port 443. See  Processing an event . Specify this field only if  method  is set to  webhook . NOTE : Redirects are not followed.
var callback: String

## The secret used to verify the signature. The secret must be an ASCII string thatâ€™s a minimum of 10 characters long and a maximum of 100 characters long. For information about how the secret is used, see  Verifying the event message . Specify this field only if  method  is set to  webhook .
var secret: String

## An ID that identifies the WebSocket to send notifications to. When you connect to EventSub using WebSockets, the server returns the ID in the  Welcome message . Specify this field only if  method  is set to  websocket .
var session_id: String

## The UTC date and time that the WebSocket connection was established. This is a response-only field that  Create EventSub Subscription  and  Get EventSub Subscription  returns if the  method  field is set to  websocket .
var connected_at: String

## The UTC date and time that the WebSocket connection was lost. This is a response-only field that  Get EventSub Subscription  returns if the  method  field is set to  websocket .
var disconnected_at: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(method: String, callback: String, secret: String, session_id: String, connected_at: String, disconnected_at: String) -> TTransport:
	var _new = TTransport.new()
	_new.method = method
	_new.callback = callback
	_new.secret = secret
	_new.session_id = session_id
	_new.connected_at = connected_at
	_new.disconnected_at = disconnected_at
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TTransport:
	if not obj: return
	if not obj is Dictionary:
		print("[TTransport]: Object is not Dictionary: ", obj)
		return

	var _new = TTransport.new()

	_new.method = obj.get("method") if obj.get("method") else ""
	_new.callback = obj.get("callback") if obj.get("callback") else ""
	_new.secret = obj.get("secret") if obj.get("secret") else ""
	_new.session_id = obj.get("session_id") if obj.get("session_id") else ""
	_new.connected_at = obj.get("connected_at") if obj.get("connected_at") else ""
	_new.disconnected_at = obj.get("disconnected_at") if obj.get("disconnected_at") else ""

	return _new
