extends TBaseType
class_name TSubscription

## Autogenerated. Do not modify.

## Your client ID.
var id: String

## The notificationâ€™s subscription type.
var type: String

## The version of the subscription.
var version: String

## The status of the subscription.
var status: String

## How much the subscription counts against your limit. See  Subscription Limits  for more information.
var cost: int

## Subscription-specific parameters.
var condition: TBaseType

## The time the notification was created.
var created_at: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, type: String, version: String, status: String, cost: int, condition: None, created_at: String) -> TSubscription:
	var _new = TSubscription.new()
	_new.id = id
	_new.type = type
	_new.version = version
	_new.status = status
	_new.cost = cost
	_new.condition = condition
	_new.created_at = created_at
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TSubscription:
	if not obj: return
	if not obj is Dictionary:
		print("[TSubscription]: Object is not Dictionary: ", obj)
		return

	var _new = TSubscription.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.type = obj.get("type") if obj.get("type") else ""
	_new.version = obj.get("version") if obj.get("version") else ""
	_new.status = obj.get("status") if obj.get("status") else ""
	_new.cost = obj.get("cost") if obj.get("cost") else 0
	_new.condition = obj.get("condition") if obj.get("condition") else null
	_new.created_at = obj.get("created_at") if obj.get("created_at") else ""

	return _new
