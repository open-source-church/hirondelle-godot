extends TBaseType
class_name TChannelChatMessageEventReply

## Autogenerated. Do not modify.

## An ID that uniquely identifies the parent message that this message is replying to.
var parent_message_id: String

## The message body of the parent message.
var parent_message_body: String

## User ID of the sender of the parent message.
var parent_user_id: String

## User name of the sender of the parent message.
var parent_user_name: String

## User login of the sender of the parent message.
var parent_user_login: String

## An ID that identifies the parent message of the reply thread.
var thread_message_id: String

## User ID of the sender of the thread’s parent message.
var thread_user_id: String

## User name of the sender of the thread’s parent message.
var thread_user_name: String

## User login of the sender of the thread’s parent message.
var thread_user_login: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(parent_message_id: String, parent_message_body: String, parent_user_id: String, parent_user_name: String, parent_user_login: String, thread_message_id: String, thread_user_id: String, thread_user_name: String, thread_user_login: String) -> TChannelChatMessageEventReply:
	var _new = TChannelChatMessageEventReply.new()
	_new.parent_message_id = parent_message_id
	_new.parent_message_body = parent_message_body
	_new.parent_user_id = parent_user_id
	_new.parent_user_name = parent_user_name
	_new.parent_user_login = parent_user_login
	_new.thread_message_id = thread_message_id
	_new.thread_user_id = thread_user_id
	_new.thread_user_name = thread_user_name
	_new.thread_user_login = thread_user_login
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TChannelChatMessageEventReply:
	if not obj: return
	if not obj is Dictionary:
		print("[TChannelChatMessageEventReply]: Object is not Dictionary: ", obj)
		return

	var _new = TChannelChatMessageEventReply.new()

	_new.parent_message_id = obj.get("parent_message_id") if obj.get("parent_message_id") else ""
	_new.parent_message_body = obj.get("parent_message_body") if obj.get("parent_message_body") else ""
	_new.parent_user_id = obj.get("parent_user_id") if obj.get("parent_user_id") else ""
	_new.parent_user_name = obj.get("parent_user_name") if obj.get("parent_user_name") else ""
	_new.parent_user_login = obj.get("parent_user_login") if obj.get("parent_user_login") else ""
	_new.thread_message_id = obj.get("thread_message_id") if obj.get("thread_message_id") else ""
	_new.thread_user_id = obj.get("thread_user_id") if obj.get("thread_user_id") else ""
	_new.thread_user_name = obj.get("thread_user_name") if obj.get("thread_user_name") else ""
	_new.thread_user_login = obj.get("thread_user_login") if obj.get("thread_user_login") else ""

	return _new
