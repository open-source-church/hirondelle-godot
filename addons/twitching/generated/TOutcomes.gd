extends TBaseType
class_name TOutcomes

## Autogenerated. Do not modify.

## The outcome ID.
var id: String

## The outcome title.
var title: String

## The color for the outcome. Valid values are  pink  and  blue .
var color: String

## The number of users who used Channel Points on this outcome.
var users: int

## The total number of Channel Points used on this outcome.
var channel_points: int

## An array of users who used the most Channel Points on this outcome.
var top_predictors: TTopPredictors

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, title: String, color: String, users: int, channel_points: int, top_predictors: TTopPredictors) -> TOutcomes:
	var _new = TOutcomes.new()
	_new.id = id
	_new.title = title
	_new.color = color
	_new.users = users
	_new.channel_points = channel_points
	_new.top_predictors = top_predictors
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TOutcomes:
	if not obj: return
	if not obj is Dictionary:
		print("[TOutcomes]: Object is not Dictionary: ", obj)
		return

	var _new = TOutcomes.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.title = obj.get("title") if obj.get("title") else ""
	_new.color = obj.get("color") if obj.get("color") else ""
	_new.users = obj.get("users") if obj.get("users") else 0
	_new.channel_points = obj.get("channel_points") if obj.get("channel_points") else 0
	_new.top_predictors = TTopPredictors.from_object(obj.get("top_predictors", {}))

	return _new
