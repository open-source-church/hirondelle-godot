extends TBaseType
class_name TConduitShardDisabledEvent

## Autogenerated. Do not modify.

## The ID of the conduit.
var conduit_id: String

## The ID of the disabled shard.
var shard_id: String

## The new status of the transport.
var status: String

## The disabled transport.
var transport: Variant

## websocket  or  webhook
var method: String

## Optional. Webhook callback URL. Null if  method  is set to  websocket .
var callback: String

## Optional. WebSocket session ID. Null if   method  is set to  webhook .
var session_id: String

## Optional. Time that the WebSocket session connected. Null if  method  is set to  webhook .
var connected_at: String

## Optional. Time that the WebSocket session disconnected. Null if  method  is set to  webhook .
var disconnected_at: String

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(conduit_id: String, shard_id: String, status: String, transport: Variant, method: String, callback: String, session_id: String, connected_at: String, disconnected_at: String) -> TConduitShardDisabledEvent:
	var _new = TConduitShardDisabledEvent.new()
	_new.conduit_id = conduit_id
	_new.shard_id = shard_id
	_new.status = status
	_new.transport = transport
	_new.method = method
	_new.callback = callback
	_new.session_id = session_id
	_new.connected_at = connected_at
	_new.disconnected_at = disconnected_at
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TConduitShardDisabledEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TConduitShardDisabledEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TConduitShardDisabledEvent.new()

	_new.conduit_id = obj.get("conduit_id") if obj.get("conduit_id") else ""
	_new.shard_id = obj.get("shard_id") if obj.get("shard_id") else ""
	_new.status = obj.get("status") if obj.get("status") else ""
	_new.transport = obj.get("transport") if obj.get("transport") else null
	_new.method = obj.get("method") if obj.get("method") else ""
	_new.callback = obj.get("callback") if obj.get("callback") else ""
	_new.session_id = obj.get("session_id") if obj.get("session_id") else ""
	_new.connected_at = obj.get("connected_at") if obj.get("connected_at") else ""
	_new.disconnected_at = obj.get("disconnected_at") if obj.get("disconnected_at") else ""

	return _new
