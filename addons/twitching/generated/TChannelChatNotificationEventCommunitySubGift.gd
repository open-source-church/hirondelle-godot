extends TBaseType
class_name TChannelChatNotificationEventCommunitySubGift

## Autogenerated. Do not modify.

## The ID of the associated community gift.
var id: String

## Number of subscriptions being gifted.
var total: int

## The type of subscription plan being used. Possible values are: <ul><li>1000 - First level of paid or Prime subscription.</li><li>2000 - Second level of paid subscription.</li><li>3000 - Third level of paid subscription.</li></ul>
var sub_tier: String

## Optional . The amount of gifts the gifter has given in this channel. Null if anonymous.
var cumulative_total: int

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, total: int, sub_tier: String, cumulative_total: int) -> TChannelChatNotificationEventCommunitySubGift:
	var _new = TChannelChatNotificationEventCommunitySubGift.new()
	_new.id = id
	_new.total = total
	_new.sub_tier = sub_tier
	_new.cumulative_total = cumulative_total
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TChannelChatNotificationEventCommunitySubGift:
	if not obj: return
	if not obj is Dictionary:
		print("[TChannelChatNotificationEventCommunitySubGift]: Object is not Dictionary: ", obj)
		return

	var _new = TChannelChatNotificationEventCommunitySubGift.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.total = obj.get("total") if obj.get("total") else 0
	_new.sub_tier = obj.get("sub_tier") if obj.get("sub_tier") else ""
	_new.cumulative_total = obj.get("cumulative_total") if obj.get("cumulative_total") else 0

	return _new
