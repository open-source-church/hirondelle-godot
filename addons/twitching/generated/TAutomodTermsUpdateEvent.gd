extends TBaseType
class_name TAutomodTermsUpdateEvent

## Autogenerated. Do not modify.

## The ID of the broadcaster specified in the request.
var broadcaster_user_id: String

## The login of the broadcaster specified in the request.
var broadcaster_user_login: String

## The user name of the broadcaster specified in the request.
var broadcaster_user_name: String

## The ID of the moderator who changed the channel settings.
var moderator_user_id: String

## The moderator’s login.
var moderator_user_login: String

## The moderator’s user name.
var moderator_user_name: String

## The status change applied to the terms. Possible options are:  add_permitted remove_permitted add_blocked remove_blocked
var action: String

## Indicates whether this term was added due to an Automod message approve/deny action.
var from_automod: bool

## The list of terms that had a status change.
var terms: Array[String]

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(broadcaster_user_id: String, broadcaster_user_login: String, broadcaster_user_name: String, moderator_user_id: String, moderator_user_login: String, moderator_user_name: String, action: String, from_automod: bool, terms: Array[String]) -> TAutomodTermsUpdateEvent:
	var _new = TAutomodTermsUpdateEvent.new()
	_new.broadcaster_user_id = broadcaster_user_id
	_new.broadcaster_user_login = broadcaster_user_login
	_new.broadcaster_user_name = broadcaster_user_name
	_new.moderator_user_id = moderator_user_id
	_new.moderator_user_login = moderator_user_login
	_new.moderator_user_name = moderator_user_name
	_new.action = action
	_new.from_automod = from_automod
	_new.terms = terms
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TAutomodTermsUpdateEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TAutomodTermsUpdateEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TAutomodTermsUpdateEvent.new()

	_new.broadcaster_user_id = obj.get("broadcaster_user_id") if obj.get("broadcaster_user_id") else ""
	_new.broadcaster_user_login = obj.get("broadcaster_user_login") if obj.get("broadcaster_user_login") else ""
	_new.broadcaster_user_name = obj.get("broadcaster_user_name") if obj.get("broadcaster_user_name") else ""
	_new.moderator_user_id = obj.get("moderator_user_id") if obj.get("moderator_user_id") else ""
	_new.moderator_user_login = obj.get("moderator_user_login") if obj.get("moderator_user_login") else ""
	_new.moderator_user_name = obj.get("moderator_user_name") if obj.get("moderator_user_name") else ""
	_new.action = obj.get("action") if obj.get("action") else ""
	_new.from_automod = obj.get("from_automod") if obj.get("from_automod") else null
	_new.terms = [] as Array[String]
	for o in obj.get("terms", []):
		_new.terms.append(o)

	return _new
