extends TBaseType
class_name TCharityDonationEvent

## Autogenerated. Do not modify.

## An ID that identifies the donation. The ID is unique across campaigns.
var id: String

## An ID that identifies the charity campaign.
var campaign_id: String

## An ID that identifies the broadcaster that’s running the campaign.
var broadcaster_user_id: String

## The broadcaster’s login name.
var broadcaster_user_login: String

## The broadcaster’s display name.
var broadcaster_user_name: String

## An ID that identifies the user that donated to the campaign.
var user_id: String

## The user’s login name.
var user_login: String

## The user’s display name.
var user_name: String

## The charity’s name.
var charity_name: String

## A description of the charity.
var charity_description: String

## A URL to an image of the charity’s logo. The image’s type is PNG and its size is 100px X 100px.
var charity_logo: String

## A URL to the charity’s website.
var charity_website: String

## An object that contains the amount of money that the user donated.
var amount: TCharityDonationEventAmount

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(id: String, campaign_id: String, broadcaster_user_id: String, broadcaster_user_login: String, broadcaster_user_name: String, user_id: String, user_login: String, user_name: String, charity_name: String, charity_description: String, charity_logo: String, charity_website: String, amount: TCharityDonationEventAmount) -> TCharityDonationEvent:
	var _new = TCharityDonationEvent.new()
	_new.id = id
	_new.campaign_id = campaign_id
	_new.broadcaster_user_id = broadcaster_user_id
	_new.broadcaster_user_login = broadcaster_user_login
	_new.broadcaster_user_name = broadcaster_user_name
	_new.user_id = user_id
	_new.user_login = user_login
	_new.user_name = user_name
	_new.charity_name = charity_name
	_new.charity_description = charity_description
	_new.charity_logo = charity_logo
	_new.charity_website = charity_website
	_new.amount = amount
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TCharityDonationEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TCharityDonationEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TCharityDonationEvent.new()

	_new.id = obj.get("id") if obj.get("id") else ""
	_new.campaign_id = obj.get("campaign_id") if obj.get("campaign_id") else ""
	_new.broadcaster_user_id = obj.get("broadcaster_user_id") if obj.get("broadcaster_user_id") else ""
	_new.broadcaster_user_login = obj.get("broadcaster_user_login") if obj.get("broadcaster_user_login") else ""
	_new.broadcaster_user_name = obj.get("broadcaster_user_name") if obj.get("broadcaster_user_name") else ""
	_new.user_id = obj.get("user_id") if obj.get("user_id") else ""
	_new.user_login = obj.get("user_login") if obj.get("user_login") else ""
	_new.user_name = obj.get("user_name") if obj.get("user_name") else ""
	_new.charity_name = obj.get("charity_name") if obj.get("charity_name") else ""
	_new.charity_description = obj.get("charity_description") if obj.get("charity_description") else ""
	_new.charity_logo = obj.get("charity_logo") if obj.get("charity_logo") else ""
	_new.charity_website = obj.get("charity_website") if obj.get("charity_website") else ""
	_new.amount = TCharityDonationEventAmount.from_object(obj.get("amount", {}))

	return _new
