extends TBaseType
class_name TChannelSubscriptionMessageEvent

## Autogenerated. Do not modify.

## The user ID of the user who sent a resubscription chat message.
var user_id: String

## The user login of the user who sent a resubscription chat message.
var user_login: String

## The user display name of the user who a resubscription chat message.
var user_name: String

## The broadcaster user ID.
var broadcaster_user_id: String

## The broadcaster login.
var broadcaster_user_login: String

## The broadcaster display name.
var broadcaster_user_name: String

## The tier of the user’s subscription.
var tier: String

## An object that contains the resubscription message and emote information needed to recreate the message.
var message: TMessage

## The total number of months the user has been subscribed to the channel.
var cumulative_months: int

## The number of consecutive months the user’s current subscription has been active. This value is  null  if the user has opted out of sharing this information.
var streak_months: int

## The month duration of the subscription.
var duration_months: int

## Create is similar to _init but takes parameters. Useful for using with autocomplete in the editor.
static func create(user_id: String, user_login: String, user_name: String, broadcaster_user_id: String, broadcaster_user_login: String, broadcaster_user_name: String, tier: String, message: TMessage, cumulative_months: int, streak_months: int, duration_months: int) -> TChannelSubscriptionMessageEvent:
	var _new = TChannelSubscriptionMessageEvent.new()
	_new.user_id = user_id
	_new.user_login = user_login
	_new.user_name = user_name
	_new.broadcaster_user_id = broadcaster_user_id
	_new.broadcaster_user_login = broadcaster_user_login
	_new.broadcaster_user_name = broadcaster_user_name
	_new.tier = tier
	_new.message = message
	_new.cumulative_months = cumulative_months
	_new.streak_months = streak_months
	_new.duration_months = duration_months
	return _new

## Create from object (usually returned from api)
static func from_object(obj: Variant) -> TChannelSubscriptionMessageEvent:
	if not obj: return
	if not obj is Dictionary:
		print("[TChannelSubscriptionMessageEvent]: Object is not Dictionary: ", obj)
		return

	var _new = TChannelSubscriptionMessageEvent.new()

	_new.user_id = obj.get("user_id") if obj.get("user_id") else ""
	_new.user_login = obj.get("user_login") if obj.get("user_login") else ""
	_new.user_name = obj.get("user_name") if obj.get("user_name") else ""
	_new.broadcaster_user_id = obj.get("broadcaster_user_id") if obj.get("broadcaster_user_id") else ""
	_new.broadcaster_user_login = obj.get("broadcaster_user_login") if obj.get("broadcaster_user_login") else ""
	_new.broadcaster_user_name = obj.get("broadcaster_user_name") if obj.get("broadcaster_user_name") else ""
	_new.tier = obj.get("tier") if obj.get("tier") else ""
	_new.message = TMessage.from_object(obj.get("message", {}))
	_new.cumulative_months = obj.get("cumulative_months") if obj.get("cumulative_months") else 0
	_new.streak_months = obj.get("streak_months") if obj.get("streak_months") else 0
	_new.duration_months = obj.get("duration_months") if obj.get("duration_months") else 0

	return _new
