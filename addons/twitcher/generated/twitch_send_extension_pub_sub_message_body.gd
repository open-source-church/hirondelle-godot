@tool
extends RefCounted

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

class_name TwitchSendExtensionPubSubMessageBody

## The target of the message. Possible values are:      * broadcast * global * whisper-<user-id>    If `is_global_broadcast` is **true**, you must set this field to global. The broadcast and global values are mutually exclusive; specify only one of them.
var target: Array[String]:
	set(val):
		target = val;
		changed_data["target"] = [];
		if target != null:
			for value in target:
				changed_data["target"].append(value);
## The ID of the broadcaster to send the message to. Donâ€™t include this field if `is_global_broadcast` is set to **true**.
var broadcaster_id: String:
	set(val):
		broadcaster_id = val;
		changed_data["broadcaster_id"] = broadcaster_id;
## A Boolean value that determines whether the message should be sent to all channels where your extension is active. Set to **true** if the message should be sent to all channels. The default is **false**.
var is_global_broadcast: bool:
	set(val):
		is_global_broadcast = val;
		changed_data["is_global_broadcast"] = is_global_broadcast;
## The message to send. The message can be a plain-text string or a string-encoded JSON object. The message is limited to a maximum of 5 KB.
var message: String:
	set(val):
		message = val;
		changed_data["message"] = message;

var changed_data: Dictionary = {};

static func from_json(d: Dictionary) -> TwitchSendExtensionPubSubMessageBody:
	var result = TwitchSendExtensionPubSubMessageBody.new();
	if d.has("target") && d["target"] != null:
		for value in d["target"]:
			result.target.append(value);
	if d.has("broadcaster_id") && d["broadcaster_id"] != null:
		result.broadcaster_id = d["broadcaster_id"];
	if d.has("is_global_broadcast") && d["is_global_broadcast"] != null:
		result.is_global_broadcast = d["is_global_broadcast"];
	if d.has("message") && d["message"] != null:
		result.message = d["message"];
	return result;

func to_dict() -> Dictionary:
	return changed_data;

func to_json() -> String:
	return JSON.stringify(to_dict());

