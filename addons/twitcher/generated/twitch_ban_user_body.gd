@tool
extends RefCounted

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

class_name TwitchBanUserBody

## Identifies the user and type of ban.
var data: Data:
	set(val):
		data = val;
		if data != null:
			changed_data["data"] = data.to_dict();

var changed_data: Dictionary = {};

static func from_json(d: Dictionary) -> TwitchBanUserBody:
	var result = TwitchBanUserBody.new();
	if d.has("data") && d["data"] != null:
		result.data = Data.from_json(d["data"]);
	return result;

func to_dict() -> Dictionary:
	return changed_data;

func to_json() -> String:
	return JSON.stringify(to_dict());

## Identifies the user and type of ban.
class Data extends RefCounted:
	## The ID of the user to ban or put in a timeout.
	var user_id: String:
		set(val):
			user_id = val;
			changed_data["user_id"] = user_id;
	## To ban a user indefinitely, don’t include this field.      To put a user in a timeout, include this field and specify the timeout period, in seconds. The minimum timeout is 1 second and the maximum is 1,209,600 seconds (2 weeks).      To end a user’s timeout early, set this field to 1, or use the [Unban user](https://dev.twitch.tv/docs/api/reference#unban-user) endpoint.
	var duration: int:
		set(val):
			duration = val;
			changed_data["duration"] = duration;
	## The reason the you’re banning the user or putting them in a timeout. The text is user defined and is limited to a maximum of 500 characters.
	var reason: String:
		set(val):
			reason = val;
			changed_data["reason"] = reason;

	var changed_data: Dictionary = {};

	static func from_json(d: Dictionary) -> Data:
		var result = Data.new();
		if d.has("user_id") && d["user_id"] != null:
			result.user_id = d["user_id"];
		if d.has("duration") && d["duration"] != null:
			result.duration = d["duration"];
		if d.has("reason") && d["reason"] != null:
			result.reason = d["reason"];
		return result;

	func to_dict() -> Dictionary:
		return changed_data;

	func to_json() -> String:
		return JSON.stringify(to_dict());

